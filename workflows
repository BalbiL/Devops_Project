name: CI/CD Pipeline

# Déclenchement du pipeline sur push/pull request dans VictorFix
on:
  push:
    branches:
      - VictorFix
  pull_request:
    branches:
      - VictorFix

jobs:
  # Étape 1 : Vérification de l'intégration continue (CI)
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r dependances.txt

    - name: Run Flask app check
      run: |
        python app.py &
        sleep 5  # Attendre que le serveur démarre
        curl -I http://127.0.0.1:5000  # Vérifier que l'app répond

  # Étape 2 : Déploiement continu (CD)
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Build Docker image
      run: docker build -t webapp .

    - name: Deploy with Docker Compose
      run: docker-compose up -d

    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f kube/
        kubectl rollout status deployment flask-deployment
